{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/justinochoa/Desktop/twitch-clone/client/src/Components/Streams/StreamCreate.jsx\";\nimport React, { Component } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nclass StreamCreate extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderInput = ({\n      input,\n      label,\n      meta\n    }) => {\n      const className = `field ${meta.error && meta.touched ? \"error\" : \"\"}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.renderError(meta)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui error message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  onSubmit() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"ui form error\",\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"title\",\n          component: this.renderInput,\n          label: \"Enter Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"description\",\n          component: this.renderInput,\n          label: \"Enter Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = \"You must enter a title\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"You must enter a description\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"streamCreate\",\n  validate: validate\n})(StreamCreate);","map":{"version":3,"sources":["/Users/justinochoa/Desktop/twitch-clone/client/src/Components/Streams/StreamCreate.jsx"],"names":["React","Component","Field","reduxForm","StreamCreate","renderInput","input","label","meta","className","error","touched","renderError","onSubmit","render","props","handleSubmit","validate","formValues","errors","title","description","form"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAWnCI,WAXmC,GAWrB,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA;AAAhB,KAAD,KAA4B;AACxC,YAAMC,SAAS,GAAI,SAAQD,IAAI,CAACE,KAAL,IAAcF,IAAI,CAACG,OAAnB,GAA6B,OAA7B,GAAuC,EAAG,EAArE;AACA,0BACE;AAAK,QAAA,SAAS,EAAEF,SAAhB;AAAA,gCACE;AAAA,oBAAQF;AAAR;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,sBAAWD;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAM,KAAKM,WAAL,CAAiBJ,IAAjB;AAAN;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KApBkC;AAAA;;AACnCI,EAAAA,WAAW,CAAC;AAAEF,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAqB;AAC9B,QAAIA,OAAO,IAAID,KAAf,EAAsB;AACpB,0BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,oBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AACF;;AAaDG,EAAAA,QAAQ,GAAG,CAAE;;AAEbC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AACE,QAAA,SAAS,EAAC,eADZ;AAEE,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKH,QAA7B,CAFZ;AAAA,gCAIE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,SAAS,EAAE,KAAKR,WAFlB;AAGE,UAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,gBAJF,eASE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,aADP;AAEE,UAAA,SAAS,EAAE,KAAKA,WAFlB;AAGE,UAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,gBATF,eAcE;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AA7CkC;;AAgDrC,MAAMY,QAAQ,GAAIC,UAAD,IAAgB;AAC/B,QAAMC,MAAM,GAAG,EAAf;;AACA,MAAI,CAACD,UAAU,CAACE,KAAhB,EAAuB;AACrBD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACD;;AACD,MAAI,CAACF,UAAU,CAACG,WAAhB,EAA6B;AAC3BF,IAAAA,MAAM,CAACE,WAAP,GAAqB,8BAArB;AACD;;AACD,SAAOF,MAAP;AACD,CATD;;AAWA,eAAehB,SAAS,CAAC;AACvBmB,EAAAA,IAAI,EAAE,cADiB;AAEvBL,EAAAA,QAAQ,EAAEA;AAFa,CAAD,CAAT,CAGZb,YAHY,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nclass StreamCreate extends Component {\n  renderError({ error, touched }) {\n    if (touched && error) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{error}</div>\n        </div>\n      );\n    }\n  }\n\n  renderInput = ({ input, label, meta }) => {\n    const className = `field ${meta.error && meta.touched ? \"error\" : \"\"}`;\n    return (\n      <div className={className}>\n        <label>{label}</label>\n        <input {...input} />\n        <div>{this.renderError(meta)}</div>\n      </div>\n    );\n  };\n\n  onSubmit() {}\n\n  render() {\n    return (\n      <div>\n        <form\n          className=\"ui form error\"\n          onSubmit={this.props.handleSubmit(this.onSubmit)}\n        >\n          <Field\n            name=\"title\"\n            component={this.renderInput}\n            label=\"Enter Title\"\n          />\n          <Field\n            name=\"description\"\n            component={this.renderInput}\n            label=\"Enter Description\"\n          />\n          <button className=\"ui button primary\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst validate = (formValues) => {\n  const errors = {};\n  if (!formValues.title) {\n    errors.title = \"You must enter a title\";\n  }\n  if (!formValues.description) {\n    errors.description = \"You must enter a description\";\n  }\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"streamCreate\",\n  validate: validate,\n})(StreamCreate);\n"]},"metadata":{},"sourceType":"module"}