{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/justinochoa/Desktop/twitch-clone/client/src/Components/GoogleAuth.js\";\nimport React, { Component } from \"react\";\n\nrequire(\"dotenv\").config();\n\nclass GoogleAuth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: null\n    };\n\n    this.onAuthChange = () => {\n      this.setState({\n        isSignedIn: this.auth.isSignedIn.get()\n      });\n    };\n\n    this.onSignIn = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOut = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client.init({\n        clientId: process.env.client_id,\n        scope: \"email\"\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.setState({\n          isSignedIn: this.auth.isSignedIn.get()\n        });\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"I don't know if I am signed in!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this);\n    } else if (this.state.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui red google button\",\n        onClick: this.onSignOut,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), \"Sign Out\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui red google button\",\n          onClick: this.onSignIn,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"google icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), \"Sign in\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default GoogleAuth;","map":{"version":3,"sources":["/Users/justinochoa/Desktop/twitch-clone/client/src/Components/GoogleAuth.js"],"names":["React","Component","require","config","GoogleAuth","state","isSignedIn","onAuthChange","setState","auth","get","onSignIn","signIn","onSignOut","signOut","componentDidMount","window","gapi","load","client","init","clientId","process","env","client_id","scope","then","auth2","getAuthInstance","listen","renderAuthButton","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCI,KADiC,GACzB;AAAEC,MAAAA,UAAU,EAAE;AAAd,KADyB;;AAAA,SAkBjCC,YAlBiC,GAkBlB,MAAM;AACnB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,UAAU,EAAE,KAAKG,IAAL,CAAUH,UAAV,CAAqBI,GAArB;AAAd,OAAd;AACD,KApBgC;;AAAA,SAsBjCC,QAtBiC,GAsBtB,MAAM;AACf,WAAKF,IAAL,CAAUG,MAAV;AACD,KAxBgC;;AAAA,SA0BjCC,SA1BiC,GA0BrB,MAAM;AAChB,WAAKJ,IAAL,CAAUK,OAAV;AACD,KA5BgC;AAAA;;AAGjCC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACrCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CACGC,IADH,CACQ;AACJC,QAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,SADlB;AAEJC,QAAAA,KAAK,EAAE;AAFH,OADR,EAKGC,IALH,CAKQ,MAAM;AACV,aAAKjB,IAAL,GAAYO,MAAM,CAACC,IAAP,CAAYU,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKpB,QAAL,CAAc;AAAEF,UAAAA,UAAU,EAAE,KAAKG,IAAL,CAAUH,UAAV,CAAqBI,GAArB;AAAd,SAAd;AACA,aAAKD,IAAL,CAAUH,UAAV,CAAqBuB,MAArB,CAA4B,KAAKtB,YAAjC;AACD,OATH;AAUD,KAXD;AAYD;;AAcDuB,EAAAA,gBAAgB,GAAG;AACjB,QAAI,KAAKzB,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAoC;AAClC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,KAAKD,KAAL,CAAWC,UAAf,EAA2B;AAChC,0BACE;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAE,KAAKO,SAAvD;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPM,MAOA;AACL,0BACE;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,sBAAlB;AAAyC,UAAA,OAAO,EAAE,KAAKF,QAAvD;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAQD;AACF;;AAEDoB,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA,gBAAM,KAAKD,gBAAL;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAtDgC;;AAyDnC,eAAe1B,UAAf","sourcesContent":["import React, { Component } from \"react\";\nrequire(\"dotenv\").config();\n\nclass GoogleAuth extends Component {\n  state = { isSignedIn: null };\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client\n        .init({\n          clientId: process.env.client_id,\n          scope: \"email\",\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n\n  onAuthChange = () => {\n    this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n  };\n\n  onSignIn = () => {\n    this.auth.signIn();\n  };\n\n  onSignOut = () => {\n    this.auth.signOut();\n  };\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) {\n      return <div>I don't know if I am signed in!</div>;\n    } else if (this.state.isSignedIn) {\n      return (\n        <button className=\"ui red google button\" onClick={this.onSignOut}>\n          <i className=\"google icon\" />\n          Sign Out\n        </button>\n      );\n    } else {\n      return (\n        <div>\n          <button className=\"ui red google button\" onClick={this.onSignIn}>\n            <i className=\"google icon\" />\n            Sign in\n          </button>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\n\nexport default GoogleAuth;\n"]},"metadata":{},"sourceType":"module"}